name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  detect-changes:
    name: Detect Changed Packages
    runs-on: ubuntu-latest
    outputs:
      design-system: ${{ steps.filter.outputs.design-system }}
      new-portfolio: ${{ steps.filter.outputs.new-portfolio }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Filter for changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            design-system:
              - 'packages/design-system/**'
            new-portfolio:
              - 'apps/new-portfolio/**'
            fonts:
              - 'packages/fonts/**'
            styling:
              - 'packages/styling/**'

  deploy-design-system:
    name: Deploy Design System to Production
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.design-system == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Mise
        uses: jdx/mise-action@v2
        with:
          install: true
          cache: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: pnpm install

      # Run linting and testing
      - name: Lint and Test Design System
        working-directory: ./packages/design-system
        run: |
          if [ -f "package.json" ] && grep -q '"lint"' package.json; then
            pnpm lint
          fi
          if [ -f "package.json" ] && grep -q '"test"' package.json; then
            pnpm test
          fi

      # Build Storybook
      - name: Build Storybook
        working-directory: ./packages/design-system
        run: pnpm build-storybook
    
      # Deploy to Cloudflare Workers Production
      - uses: cloudflare/wrangler-action@v3
        with:
          workingDirectory: "./packages/design-system"
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: 'deploy --env production --minify --upload-source-maps'
          wranglerVersion: "4.22.0"
          packageManager: pnpm

  deploy-new-portfolio:
    name: Deploy New Portfolio to Production
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.new-portfolio == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SOPS
        uses: nhedger/setup-sops@v2
        with:
          version: "3.10.2"

      - name: Setup age
        uses: alessiodionisi/setup-age-action@v1.3.0

      - name: Setup Mise
        uses: jdx/mise-action@v2
        with:
          install: true
          cache: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: pnpm install

      - name: Build Design System
        run: pnpm --filter '@ws-portfolio/design-system' build

      - name: Decrypt environment file
        working-directory: ./apps/new-portfolio
        run: |
          echo "${{ secrets.AGE_SECRET_KEY }}" > /tmp/age_key.txt
          export SOPS_AGE_KEY_FILE=/tmp/age_key.txt
          sops decrypt --input-type dotenv --output-type dotenv .ci.env > .env
          rm /tmp/age_key.txt
    
      # Deploy to Cloudflare Pages Production
      - uses: cloudflare/wrangler-action@v3
        with:
          workingDirectory: "./apps/new-portfolio"
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: 'deploy --env production --minify --upload-source-maps'
          wranglerVersion: "4.22.0"
          packageManager: pnpm

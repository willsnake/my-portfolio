name: New Portfolio Workflow

on:
  workflow_run:
    workflows: [Detect Changes]
    types:
      - completed

jobs:
  new-portfolio:
    name: New Portfolio Build and Deploy
    runs-on: ubuntu-latest
    # Only run when detect-changes workflow triggers it
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: detect-changes.yml
          run_id: ${{ github.event.workflow_run.id }}
          name: pr-data
          path: .

      - name: Set PR data
        run: cat pr.json >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.PR_HEAD_REF }}

      # Check if new-portfolio changes were detected
      - name: Check if new-portfolio changed
        id: check-changes
        run: |
          if [ "${{ env.NEW_PORTFOLIO_CHANGED }}" = "true" ]; then
            echo "New Portfolio changes detected!"
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "No New Portfolio changes detected, skipping workflow"
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      # Setup Node and PNPM with mise.toml versions
      - name: Setup Node
        if: steps.check-changes.outputs.changes == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.0'

      - name: Setup PNPM
        if: steps.check-changes.outputs.changes == 'true'
        uses: pnpm/action-setup@v3
        with:
          version: '10.10.0'

      - name: Install dependencies
        if: steps.check-changes.outputs.changes == 'true'
        run: pnpm install

      # Run linting and formatting if available
      - name: Lint New Portfolio
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          cd apps/new-portfolio
          if [ -f "package.json" ] && grep -q '"lint"' package.json; then
            pnpm lint
          else
            echo "No lint script found in package.json, skipping"
          fi

      # Build the portfolio
      - name: Build New Portfolio
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          cd apps/new-portfolio
          pnpm build

      # Deploy to Cloudflare Workers
      - name: Deploy to Cloudflare Workers
        if: steps.check-changes.outputs.changes == 'true'
        id: deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          cd apps/new-portfolio
          # Verificamos si existe el comando deploy en el package.json
          if grep -q '"deploy"' package.json; then
            DEPLOY_OUTPUT=$(pnpm deploy 2>&1 || exit 1)
          else
            # Si no existe, usamos wrangler directamente
            npm install -g wrangler
            DEPLOY_OUTPUT=$(wrangler pages deploy ./dist --project-name new-portfolio-preview 2>&1 || exit 1)
          fi
          PREVIEW_URL=$(echo "$DEPLOY_OUTPUT" | grep -o 'https://[^ ]*workers.dev' || echo "$DEPLOY_OUTPUT" | grep -o 'https://[^ ]*pages.dev')
          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT
          
      # Check if a comment already exists
      - name: Find comment
        if: steps.check-changes.outputs.changes == 'true' && steps.deploy.outputs.preview_url
        uses: peter-evans/find-comment@v3
        id: find-comment
        with:
          issue-number: ${{ env.PR_NUMBER }}
          comment-author: 'github-actions[bot]'
          body-includes: 'New Portfolio Preview'

      # Create a new comment if one doesn't exist
      - name: Create comment
        if: steps.check-changes.outputs.changes == 'true' && steps.deploy.outputs.preview_url && steps.find-comment.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ env.PR_NUMBER }}
          body: |
            ### New Portfolio Preview
            
            âœ… New Portfolio has been deployed to Cloudflare.
            
            ðŸ”— Preview URL: ${{ steps.deploy.outputs.preview_url }}
            
            This comment will be updated when the preview is redeployed.

      # Update an existing comment
      - name: Update comment
        if: steps.check-changes.outputs.changes == 'true' && steps.deploy.outputs.preview_url && steps.find-comment.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: replace
          body: |
            ### New Portfolio Preview
            
            âœ… New Portfolio has been redeployed to Cloudflare.
            
            ðŸ”— Preview URL: ${{ steps.deploy.outputs.preview_url }}
            
            Last updated: ${{ github.event.workflow_run.updated_at }}